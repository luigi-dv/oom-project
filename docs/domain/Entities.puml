@startuml
class User {

- username : String
- bio : String
- password : String
- profile : Profile

+ getUsername() : String
+ getBio() : String
+ getProfile() : Profile

+ setUsername(username : String) : void
+ setProfile(profile : Profile) : void
+ toString() : String
}
class Profile{
- pictures : List<Picture>
- followingUsers : List<User>
- followerUser : List<User>

+ getPostsCount() : int
+ getFollowerCount() : int
+ getFollowingCount() : int

+ getPictures() : List<Picture>
+ getFollowingUsers() : List<User>
+ getFollowerUser() : List<User>

+ addPicture(picture : Picture) : void
+ addFollower(user : User) : void
+ addFollowing(user : User) : void

+ setPictures(pictures : List<Picture>) : void
+ setFollowingUsers(followingUsers : List<User>) : void
+ setFollowerUser(followerUsers : List<User>) : void
}
class Picture implements ILikeable {
- id : UUID
- user : User
- imagePath : String
- caption : String
- comments : List<Comment>
- likes : List<Like<Picture>>

+ getId() : UUID
+ getUser() : User
+ getImagePath() : String
+ getCaption() : String
+ getLikesCount() : int
+ getComments() : List<Comment>
+ getLikes() : List<Like<Picture>>
+ getType() : String

+ addComment(comment: Comment) : void
+ addLike(like : Like<Picture>) : void

+ deleteComment(comment : Comment) : void
+ deleteLike(like : Like<Picture>) : void

}
class Comment implements ILikeable {
- id : UUID
- user : User
- picture : Picture
- likes : List<Like<Comment>>
- text : String

+ getId() : UUID
+ getUser() : User
+ getPicture() : Picture
+ getText() : String
+ getLikesCount() : int
+ getType() : String

+ addLike(like : Like<Comment>) : void
}
class Like<T extends ILikeable> {
- id : UUID
- user : User
- content : T

+ getId() : UUID
+ getUser() : User
+ getContent() : T
}
interface ILikeable {
+ getType() : String
+ getId() : UUID
}

class Follow(Record) {
- user : User
- follower : User
- datetime : LocalDateTime

+ user() : User
+ follower() : User
+ datetime() : LocalDateTime
}

User "1" -- "1" Profile
Profile"1" -- "*" Picture: contains
Picture "1" -- "*" Comment: contains
Picture "1" -right- "*" Like: Picture Like
Comment "1" -- "*" Like: Comment Like


@enduml